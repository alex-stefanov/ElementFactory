@{
    ViewData["Title"] = "Home Page";
}
@model List<ElementFactory.Data.Models.ChemicalElement>

<div class="errorDiv">
    Invalid year! Value must be from 0 to 2024!
</div>

<form>
    <table>
        <tbody>
            <!--Upper part of the table-->
            @for (int period = 1; period <= 7; period++)
            {
                <tr>
                    @for (int group = 1; group <= 18; group++)
                    {
                        @if (period == 1 && group == 13)
                        {
                            <td id="listItems">
                                <div class="listItems">
                                    <select id="seeItemsList">
                                        <option id="seeAtomicNumber">Изглед по характер на елементите</option>
                                        <option id="seeAtomicMass">Изглед по атомна маса</option>
                                        <option id="seePhysicalAppearance">Изглед по физично състояние</option>
                                        <option id="seeAtomicRadius">Изглед по атомен радиус</option>
                                        <option id="seeMeltingPoint">Изглед по температура на топене</option>
                                        <option id="seeBoilingPoint">Изглед по температура на кипене</option>
                                        <option id="seeByYear">Изглед по години (въведи година)</option>
                                    </select>
                                    <input type="number" class="yearInput"/>
                                </div>
                            </td>
                        }
                        else if (
                            !(period == 1 &&
                            (group == 13 ||
                            group == 14 || 
                            group == 15 || 
                            group == 16 || 
                            group == 17)))
                        {
                            ElementFactory.Data.Models.ChemicalElement? chemicalElement = 
                                @Model.FirstOrDefault(x => x.Period == period && x.Group == group);
                                
                            if (chemicalElement == null)
                            {
                                <td></td>
                            }
                            else
                            {
                                <td class="@chemicalElement.ChemicalType.Name">
                                    <a>
                                        <p class="atomicNumber">@chemicalElement.AtomicNumber</p>
                                        <p class="symbol">@chemicalElement.Symbol</p>
                                        <p class="name">@chemicalElement.Name</p>
                                    </a>
                                </td>
                            }
                        }
                    }

                </tr>

            }

            <!--Lanthanides and Actinides-->
            @for (int i = 1; i <= 2; i++)
            {
                <tr>
                    <td></td>
                    <td></td>
                    <td></td>
                    @if (i == 1)
                    {
                       @foreach (ElementFactory.Data.Models.ChemicalElement
                            chemicalElement in Model.Where(x => x.Group == 0 && x.Period == 6))
                        {
                            <td class="@chemicalElement.ChemicalType.Name">
                                <a>
                                    <p class="atomicNumber">@chemicalElement.AtomicNumber</p>
                                    <p class="symbol">@chemicalElement.Symbol</p>
                                    <p class="name">@chemicalElement.Name</p>
                                </a>
                            </td>
                        }
                    }
                    else
                    {
                        foreach (ElementFactory.Data.Models.ChemicalElement
                        chemicalElement in Model
                            .Where(x => x.Group == 0 && x.Period == 7))
                        {
                            <td class="@chemicalElement.ChemicalType.Name">
                                <a>
                                    <p class="atomicNumber">@chemicalElement.AtomicNumber</p>
                                    <p class="symbol">@chemicalElement.Symbol</p>
                                    <p class="name">@chemicalElement.Name</p>
                                </a>
                            </td>
                        }
                    }
                </tr>
            }
        </tbody>
    </table>
</form>

@{
    var atomicNumbersJson = Json.Serialize(Model.Select(x => x.AtomicNumber));
    var symbolsJson = Json.Serialize(Model.Select(x => x.Symbol.ToCharArray().Select(x => (int)x)));
    var namesJson = Json.Serialize(Model.Select(x => x.Name.ToCharArray().Select(x => (int)x)));
    var chemicalTypesJson = Json.Serialize(Model.Select(x => x.ChemicalType.Name.ToCharArray().Select(x => (int)x)));
    var atomicMassesJson = Json.Serialize(Model.Select(x => x.AtomicMass));
    var physicalStatesJson = Json.Serialize(Model.Select(x => x.State?.ToCharArray().Select(x => (int)x)));
    var atomicRadiuses = Json.Serialize(Model.Select(x => x.AtomicRadius));
    var meltingPoints = Json.Serialize(Model.Select(x => x.MeltingPoint));
    var boilingPoints = Json.Serialize(Model.Select(x => x.BoilingPoint));
    var years = Json.Serialize(Model.Select(x => x.YearFound));
} 
<script src="/js/listItems.js" asp-append-version="true"
    onload="PageSettings
(@atomicNumbersJson,
@symbolsJson,
@namesJson,
@chemicalTypesJson, 
@atomicMassesJson, 
@physicalStatesJson,
@atomicRadiuses,
@meltingPoints,
@boilingPoints,
@years)"></script>
